<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tech on 颢阳's Blog</title><link>https://blog.peterchen.xyz/categories/tech/</link><description>Recent content in tech on 颢阳's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>颢阳</copyright><lastBuildDate>Mon, 15 Feb 2021 09:08:23 -0600</lastBuildDate><atom:link href="https://blog.peterchen.xyz/categories/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>Create Responsive Shortcode</title><link>https://blog.peterchen.xyz/posts/create-responsive-shortcode/</link><pubDate>Mon, 15 Feb 2021 09:08:23 -0600</pubDate><guid>https://blog.peterchen.xyz/posts/create-responsive-shortcode/</guid><description>I am not a frontend guy, so it&amp;rsquo;s a little challenging to me to create an aesthetical site. However, I really want to fix a bug for my linkedin shortcode on my Hugo site. Before I fix it, it looks like:
As you can see, the entire linkedin post is cropped, and looks very ugly. And here is what it looks like on my phone:
I have to scroll down to see the important content of this linkedin post, which is really annoying on a smaller screen.</description></item><item><title>How Do I Create This Site</title><link>https://blog.peterchen.xyz/posts/how-do-i-create-this-site/</link><pubDate>Sun, 14 Feb 2021 21:15:58 -0600</pubDate><guid>https://blog.peterchen.xyz/posts/how-do-i-create-this-site/</guid><description>I have browsed through a lot of beautiful sites that are created by Github page, and I want to try a new statics site framework, so I started this site using Hugo.
Here are the step by step guide that reproduces the entire process.
Install Hugo through Homebrew Just follow what Hugo Documentation said here.
Try out the rudimentary theme Before you install other themes, first run $ hugo new site blog.</description></item><item><title>System Design</title><link>https://blog.peterchen.xyz/posts/system-design/</link><pubDate>Sun, 14 Feb 2021 18:44:54 -0600</pubDate><guid>https://blog.peterchen.xyz/posts/system-design/</guid><description>I have found some useful design principles and practices from one Linkedin user: .container { position: relative; overflow: hidden; width: 100%; padding-top: 75%; } .responsive-iframe { position: absolute; top: 0; left: 0; bottom: 0; right: 0; width: 100%; height: 100%; } Blog post for showing why Java&amp;rsquo;s hashcode doesn&amp;rsquo;t provide consistency guarantee: Java&amp;rsquo;s hashCode is not safe for distributed systems 中文总结&amp;laquo</description></item><item><title>iOS Fundamentals Part 2</title><link>https://blog.peterchen.xyz/posts/2017-11-15-ios-fundamentals-2/</link><pubDate>Wed, 15 Nov 2017 11:00:30 -1200</pubDate><guid>https://blog.peterchen.xyz/posts/2017-11-15-ios-fundamentals-2/</guid><description>Scene &amp;amp; Segues Use blocks for communication between scenes (save or cancel) typedef returntype(^&amp;lt;#block name#&amp;gt;)(&amp;lt;#arguments#&amp;gt;); block properties should always be copy Two common styles: Show: left-to-right navigation Present Modally: full-screen cover Use prepareForSegue: to connect Set the completion handler: insert new quote into models; have table view reload data; dismiss view controller Data Persistence User Default: NSUserDefaults using key value (like NSDictionary) Save files to the Document folder using plist Use SQLite Use Core Data Folder to save</description></item><item><title>iOS Fundamentals Part 1</title><link>https://blog.peterchen.xyz/posts/2017-11-15-ios-fundamentals-1/</link><pubDate>Mon, 13 Nov 2017 11:00:30 -1200</pubDate><guid>https://blog.peterchen.xyz/posts/2017-11-15-ios-fundamentals-1/</guid><description>Gesture Tap Double Tap Drag Flick Pinch Spread Press Press and tap Add gesture recognizer in code
Single Tap
// ViewController.m: Single Tap - (void)viewDidLoad { [super viewDidLoad]; UITapGestureRecognizer *singleTap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(singleTapRecognized:)]; /* if double click doubleTap.numberOfTapsRequired = 2; */ [self.view addGestureRecognizer:singleTap]; } - (void) singleTapRecognized: (UITapGestureRecognizer *) recognizer { self.msgLabel.text = @&amp;#34;You single tapped me!&amp;#34;; } Single &amp;amp; Double Tap
// double tap UITapGestureRecognizer *singleTap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(singleTapRecognized:)]; [self.</description></item><item><title>学习bash脚本</title><link>https://blog.peterchen.xyz/posts/2017-08-09-bash-scripting/</link><pubDate>Wed, 09 Aug 2017 13:32:30 -1500</pubDate><guid>https://blog.peterchen.xyz/posts/2017-08-09-bash-scripting/</guid><description>everything is about efficiency 介绍 最近学习了一下bash脚本的语法，感觉非常的实用，比如之前的分享的Gist中的按期备份数据库的脚本： Backup Scripts written in bash 感觉还是蛮酷的，在</description></item><item><title>实习学习总结</title><link>https://blog.peterchen.xyz/posts/2017-07-29-after-intern/</link><pubDate>Sat, 29 Jul 2017 10:57:30 -1200</pubDate><guid>https://blog.peterchen.xyz/posts/2017-07-29-after-intern/</guid><description>引 转眼已经到了7月底，我在Atman的实习也正式告一段落。在这短短的两个月内我学到了很多有用的知识，打算分成以下几个类别来总结我学到的知识：</description></item><item><title>zsh使用</title><link>https://blog.peterchen.xyz/posts/2017-07-10-zsh/</link><pubDate>Mon, 10 Jul 2017 22:01:30 -1200</pubDate><guid>https://blog.peterchen.xyz/posts/2017-07-10-zsh/</guid><description>以下基于Linux系统 zsh简介 在写程序的时候很多时候要会使用shell操作一些命令，因此有一个比较好用的terminal十分重要。像最基本</description></item><item><title>Django浅谈</title><link>https://blog.peterchen.xyz/posts/2017-06-20-django/</link><pubDate>Tue, 20 Jun 2017 10:57:30 -1200</pubDate><guid>https://blog.peterchen.xyz/posts/2017-06-20-django/</guid><description>Django为何物 Django是在网页开发中比较常用的一个框架，主要帮助搭建一个类似MVC的workflow. 免去了很多繁琐的网页界面交互的</description></item></channel></rss>