<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>design on Peter's Blog</title><link>https://blog.peterchen.xyz/tags/design/</link><description>Recent content in design on Peter's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Peter Chen</copyright><lastBuildDate>Sun, 14 Feb 2021 18:44:54 -0600</lastBuildDate><atom:link href="https://blog.peterchen.xyz/tags/design/index.xml" rel="self" type="application/rss+xml"/><item><title>System Design</title><link>https://blog.peterchen.xyz/posts/system-design/</link><pubDate>Sun, 14 Feb 2021 18:44:54 -0600</pubDate><guid>https://blog.peterchen.xyz/posts/system-design/</guid><description> I have found some useful design principles and practices from one Linkedin user:
Blog post for showing why Java&amp;rsquo;s hashcode doesn&amp;rsquo;t provide consistency guarantee: Java&amp;rsquo;s hashCode is not safe for distributed systems
中文总结&amp;laquo; Designing Data-Intensive Applications &amp;raquo;: 心得筆記</description></item></channel></rss>